{"version":3,"sources":["components/Footers.js","img/icon-moon.svg","img/icon-sun.svg","components/Darkmode.js","components/Header.js","components/Form.js","img/icon-cross.svg","components/FilterButton.js","components/TodoList.js","components/MobileFilterButton.js","components/Todo.js","App.js","index.js"],"names":["Footer","Darkmode","theme","clickedClass","body","document","lightTheme","darkTheme","useState","moon","imgSrc","setImgSrc","localStorage","getItem","classList","add","src","alt","className","id","onClick","e","replace","target","remove","setItem","sun","Header","Form","props","inputText","setInputText","handleSubmit","preventDefault","addTask","setTimeout","checked","onSubmit","type","onChange","name","placeholder","autoComplete","value","FilterButton","taskCount","statusHandler","clearCompletedTasks","TodoList","onDragEnd","result","items","Array","from","filteredTask","splice","source","index","reorderedItem","destination","setFilteredTask","droppableId","provided","droppableProps","ref","innerRef","map","task","draggableId","indexOf","draggableProps","dragHandleProps","completed","role","key","htmlFor","defaultChecked","toggleTaskCompleted","deleteIcon","deleteTask","MobileFilterButton","Todo","savedTasks","JSON","parse","tasks","setTask","setTaskCount","status","setStatus","innerText","useEffect","stringify","filter","filterHandler","activeTask","length","taskCountHandler","newTask","nanoid","remainingTasks","updatedTask","activeTasks","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.17489bbb.chunk.js","sourcesContent":["const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Drag and drop to reorder list</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","import { useState } from \"react\";\r\nimport \"../Darkmode.css\";\r\nimport moon from \"../img/icon-moon.svg\";\r\nimport sun from \"../img/icon-sun.svg\";\r\n\r\nconst Darkmode = () => {\r\n  let clickedClass = \"clicked\";\r\n  const body = document.body;\r\n  const lightTheme = \"light\";\r\n  const darkTheme = \"dark\";\r\n  const [imgSrc, setImgSrc] = useState(moon);\r\n  let theme;\r\n\r\n  if (localStorage) {\r\n    theme = localStorage.getItem(\"theme\");\r\n  }\r\n\r\n  if (theme === lightTheme || theme === darkTheme) {\r\n    body.classList.add(theme);\r\n  } else {\r\n    body.classList.add(lightTheme);\r\n  }\r\n  function switchTheme(e) {\r\n    if (theme === darkTheme) {\r\n      body.classList.replace(darkTheme, lightTheme);\r\n      e.target.classList.remove(clickedClass);\r\n      localStorage.setItem(\"theme\", \"light\");\r\n      theme = lightTheme;\r\n      setImgSrc(moon);\r\n    } else {\r\n      body.classList.replace(lightTheme, darkTheme);\r\n      e.target.classList.add(clickedClass);\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n      theme = darkTheme;\r\n      setImgSrc(sun);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <img\r\n      src={imgSrc}\r\n      alt={\"moon\"}\r\n      className={theme === \"dark\" ? clickedClass : \"\"}\r\n      id=\"darkMode\"\r\n      onClick={switchTheme}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Darkmode;\r\n","import Darkmode from \"./Darkmode\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div>\r\n        <h1>TODO</h1>\r\n        <Darkmode />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nconst Form = (props) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  function handleChange(e) {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (inputText !== \"\") {\r\n      props.addTask(inputText);\r\n      setInputText(\"\");\r\n      setTimeout(() => {\r\n        e.target.checked = false;\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  //   function checkSubmit(e) {\r\n  //     let keyPressed = e.which ? e.which : e.keyCode;\r\n  //     if (keyPressed === 13) {\r\n  //       handleSubmit(e);\r\n  //     }\r\n  //   }\r\n\r\n  return (\r\n    <form className=\"add-todo\" onSubmit={handleSubmit}>\r\n      <label className=\"checkbox-wrapper\">\r\n        <input type=\"checkbox\" id=\"newTodo\" onChange={handleSubmit} />\r\n        <span className=\"checkmark\"></span>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"todoInput\"\r\n        id=\"todoInput\"\r\n        placeholder=\"Create a new todo...\"\r\n        autoComplete=\"off\"\r\n        value={inputText}\r\n        onChange={handleChange}\r\n        // onKeyPress={checkSubmit}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","const FilterButton = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"todo-footer\">\r\n        <div>\r\n          <span>{props.taskCount} items left</span>\r\n        </div>\r\n        <div className=\"status-wrapper\">\r\n          <ul onClick={props.statusHandler} id=\"status\">\r\n            <li id=\"active\">All</li>\r\n            <li>Active</li>\r\n            <li>Completed</li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <span onClick={props.clearCompletedTasks}>Clear Completed</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterButton;\r\n","import { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport deleteIcon from \"../img/icon-cross.svg\";\r\nimport FilterButton from \"./FilterButton\";\r\nconst TodoList = (props) => {\r\n  function handleOnDragEnd(result) {\r\n    const items = Array.from(props.filteredTask);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    props.setFilteredTask(items);\r\n  }\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId=\"lists\">\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {props.filteredTask.map((task) => (\r\n                <Draggable\r\n                  key={task.id}\r\n                  draggableId={task.id}\r\n                  index={props.filteredTask.indexOf(task)}\r\n                >\r\n                  {(provided) => (\r\n                    <div\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      ref={provided.innerRef}\r\n                      className={`todo ${task.completed ? \"completed\" : \"\"}`}\r\n                      role=\"list\"\r\n                      key={task.id}\r\n                    >\r\n                      <label className=\"checkbox-wrapper\" htmlFor={task.id}>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={task.id}\r\n                          defaultChecked={task.completed}\r\n                          onChange={() => props.toggleTaskCompleted(task.id)}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                      </label>\r\n                      <p className=\"todo-content\">{task.name} </p>\r\n                      <img\r\n                        src={deleteIcon}\r\n                        alt=\"Delete Icon\"\r\n                        onClick={() => props.deleteTask(task.id)}\r\n                        className=\"delete-btn\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n\r\n      <FilterButton\r\n        taskCount={props.taskCount}\r\n        clearCompletedTasks={props.clearCompletedTasks}\r\n        statusHandler={props.statusHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","const MobileFilterButton = (props) => {\r\n  return (\r\n    <div className=\"todo-status\">\r\n      <ul onClick={props.statusHandler} id=\"status\">\r\n        <li id=\"active\">All</li>\r\n        <li>Active</li>\r\n        <li>Completed</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileFilterButton;\r\n","import { useState, useEffect } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Form from \"./Form\";\r\nimport TodoList from \"./TodoList\";\r\nimport MobileFilterButton from \"./MobileFilterButton\";\r\n\r\nconst Todo = (props) => {\r\n  const [tasks, setTask] = useState(() => {\r\n    const savedTasks = localStorage.getItem(\"tasks\");\r\n    // return the parsed JSON object or empty array if none\r\n    return savedTasks ? JSON.parse(savedTasks) : [];\r\n  });\r\n  const [taskCount, setTaskCount] = useState(0);\r\n  const [status, setStatus] = useState(\"All\");\r\n  const [filteredTask, setFilteredTask] = useState([]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    filterHandler();\r\n    taskCountHandler();\r\n    // eslint-disable-next-line\r\n  }, [tasks, status]);\r\n\r\n  function addTask(inputText) {\r\n    const newTask = {\r\n      id: nanoid(),\r\n      name: inputText,\r\n      completed: false,\r\n    };\r\n\r\n    setTask([...tasks, newTask]);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter((task) => task.id !== id);\r\n\r\n    setTask(remainingTasks);\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTask = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n\r\n      return task;\r\n    });\r\n\r\n    setTask(updatedTask);\r\n  }\r\n\r\n  function clearCompletedTasks() {\r\n    const activeTasks = tasks.filter((task) => task.completed === false);\r\n    setTask(activeTasks);\r\n  }\r\n\r\n  function filterHandler() {\r\n    switch (status) {\r\n      case \"Active\":\r\n        setFilteredTask(tasks.filter((task) => task.completed === false));\r\n        break;\r\n      case \"Completed\":\r\n        setFilteredTask(tasks.filter((task) => task.completed === true));\r\n        break;\r\n      default:\r\n        setFilteredTask(tasks);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function taskCountHandler() {\r\n    const activeTask = tasks.filter((task) => task.completed === false);\r\n    setTaskCount(activeTask.length);\r\n  }\r\n  function statusHandler(e) {\r\n    setStatus(e.target.innerText);\r\n  }\r\n  return (\r\n    <div>\r\n      <Form addTask={addTask} />\r\n      <TodoList\r\n        tasks={tasks}\r\n        deleteTask={deleteTask}\r\n        toggleTaskCompleted={toggleTaskCompleted}\r\n        clearCompletedTasks={clearCompletedTasks}\r\n        setStatus={setStatus}\r\n        filteredTask={filteredTask}\r\n        taskCount={taskCount}\r\n        statusHandler={statusHandler}\r\n        setFilteredTask={setFilteredTask}\r\n      />\r\n      <MobileFilterButton statusHandler={statusHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import Footer from \"./components/Footers\";\nimport Header from \"./components/Header\";\nimport Todo from \"./components/Todo\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <Header />\n        <Todo />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}